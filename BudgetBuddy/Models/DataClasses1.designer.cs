#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BudgetBuddy.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BudgetBuddy")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertquest(quest instance);
    partial void Updatequest(quest instance);
    partial void Deletequest(quest instance);
    partial void Insertvoucher(voucher instance);
    partial void Updatevoucher(voucher instance);
    partial void Deletevoucher(voucher instance);
    partial void Insertquest_status(quest_status instance);
    partial void Updatequest_status(quest_status instance);
    partial void Deletequest_status(quest_status instance);
    partial void Inserttransaction(transaction instance);
    partial void Updatetransaction(transaction instance);
    partial void Deletetransaction(transaction instance);
    partial void Insertuser_detail(user_detail instance);
    partial void Updateuser_detail(user_detail instance);
    partial void Deleteuser_detail(user_detail instance);
    partial void Insertuser_quest(user_quest instance);
    partial void Updateuser_quest(user_quest instance);
    partial void Deleteuser_quest(user_quest instance);
    partial void Insertuser_voucher(user_voucher instance);
    partial void Updateuser_voucher(user_voucher instance);
    partial void Deleteuser_voucher(user_voucher instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertusers_bank_account(users_bank_account instance);
    partial void Updateusers_bank_account(users_bank_account instance);
    partial void Deleteusers_bank_account(users_bank_account instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::BudgetBuddy.Properties.Settings.Default.BudgetBuddyConnectionString3, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<quest> quests
		{
			get
			{
				return this.GetTable<quest>();
			}
		}
		
		public System.Data.Linq.Table<voucher> vouchers
		{
			get
			{
				return this.GetTable<voucher>();
			}
		}
		
		public System.Data.Linq.Table<quest_status> quest_status
		{
			get
			{
				return this.GetTable<quest_status>();
			}
		}
		
		public System.Data.Linq.Table<transaction> transactions
		{
			get
			{
				return this.GetTable<transaction>();
			}
		}
		
		public System.Data.Linq.Table<user_detail> user_details
		{
			get
			{
				return this.GetTable<user_detail>();
			}
		}
		
		public System.Data.Linq.Table<user_quest> user_quests
		{
			get
			{
				return this.GetTable<user_quest>();
			}
		}
		
		public System.Data.Linq.Table<user_voucher> user_vouchers
		{
			get
			{
				return this.GetTable<user_voucher>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<users_bank_account> users_bank_accounts
		{
			get
			{
				return this.GetTable<users_bank_account>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.quest")]
	public partial class quest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _quest_id;
		
		private string _quest_description;
		
		private int _quest_reward;
		
		private System.DateTime _quest_date;
		
		private EntitySet<user_quest> _user_quests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onquest_idChanging(int value);
    partial void Onquest_idChanged();
    partial void Onquest_descriptionChanging(string value);
    partial void Onquest_descriptionChanged();
    partial void Onquest_rewardChanging(int value);
    partial void Onquest_rewardChanged();
    partial void Onquest_dateChanging(System.DateTime value);
    partial void Onquest_dateChanged();
    #endregion
		
		public quest()
		{
			this._user_quests = new EntitySet<user_quest>(new Action<user_quest>(this.attach_user_quests), new Action<user_quest>(this.detach_user_quests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quest_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int quest_id
		{
			get
			{
				return this._quest_id;
			}
			set
			{
				if ((this._quest_id != value))
				{
					this.Onquest_idChanging(value);
					this.SendPropertyChanging();
					this._quest_id = value;
					this.SendPropertyChanged("quest_id");
					this.Onquest_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quest_description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string quest_description
		{
			get
			{
				return this._quest_description;
			}
			set
			{
				if ((this._quest_description != value))
				{
					this.Onquest_descriptionChanging(value);
					this.SendPropertyChanging();
					this._quest_description = value;
					this.SendPropertyChanged("quest_description");
					this.Onquest_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quest_reward", DbType="Int NOT NULL")]
		public int quest_reward
		{
			get
			{
				return this._quest_reward;
			}
			set
			{
				if ((this._quest_reward != value))
				{
					this.Onquest_rewardChanging(value);
					this.SendPropertyChanging();
					this._quest_reward = value;
					this.SendPropertyChanged("quest_reward");
					this.Onquest_rewardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quest_date", DbType="Date NOT NULL")]
		public System.DateTime quest_date
		{
			get
			{
				return this._quest_date;
			}
			set
			{
				if ((this._quest_date != value))
				{
					this.Onquest_dateChanging(value);
					this.SendPropertyChanging();
					this._quest_date = value;
					this.SendPropertyChanged("quest_date");
					this.Onquest_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="quest_user_quest", Storage="_user_quests", ThisKey="quest_id", OtherKey="quest_id")]
		public EntitySet<user_quest> user_quests
		{
			get
			{
				return this._user_quests;
			}
			set
			{
				this._user_quests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_user_quests(user_quest entity)
		{
			this.SendPropertyChanging();
			entity.quest = this;
		}
		
		private void detach_user_quests(user_quest entity)
		{
			this.SendPropertyChanging();
			entity.quest = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vouchers")]
	public partial class voucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _voucher_id;
		
		private string _voucher_name;
		
		private int _required_points;
		
		private string _voucher_type;
		
		private int _voucher_reward;
		
		private EntitySet<user_voucher> _user_vouchers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvoucher_idChanging(int value);
    partial void Onvoucher_idChanged();
    partial void Onvoucher_nameChanging(string value);
    partial void Onvoucher_nameChanged();
    partial void Onrequired_pointsChanging(int value);
    partial void Onrequired_pointsChanged();
    partial void Onvoucher_typeChanging(string value);
    partial void Onvoucher_typeChanged();
    partial void Onvoucher_rewardChanging(int value);
    partial void Onvoucher_rewardChanged();
    #endregion
		
		public voucher()
		{
			this._user_vouchers = new EntitySet<user_voucher>(new Action<user_voucher>(this.attach_user_vouchers), new Action<user_voucher>(this.detach_user_vouchers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voucher_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int voucher_id
		{
			get
			{
				return this._voucher_id;
			}
			set
			{
				if ((this._voucher_id != value))
				{
					this.Onvoucher_idChanging(value);
					this.SendPropertyChanging();
					this._voucher_id = value;
					this.SendPropertyChanged("voucher_id");
					this.Onvoucher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voucher_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string voucher_name
		{
			get
			{
				return this._voucher_name;
			}
			set
			{
				if ((this._voucher_name != value))
				{
					this.Onvoucher_nameChanging(value);
					this.SendPropertyChanging();
					this._voucher_name = value;
					this.SendPropertyChanged("voucher_name");
					this.Onvoucher_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_required_points", DbType="Int NOT NULL")]
		public int required_points
		{
			get
			{
				return this._required_points;
			}
			set
			{
				if ((this._required_points != value))
				{
					this.Onrequired_pointsChanging(value);
					this.SendPropertyChanging();
					this._required_points = value;
					this.SendPropertyChanged("required_points");
					this.Onrequired_pointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voucher_type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string voucher_type
		{
			get
			{
				return this._voucher_type;
			}
			set
			{
				if ((this._voucher_type != value))
				{
					this.Onvoucher_typeChanging(value);
					this.SendPropertyChanging();
					this._voucher_type = value;
					this.SendPropertyChanged("voucher_type");
					this.Onvoucher_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voucher_reward", DbType="Int NOT NULL")]
		public int voucher_reward
		{
			get
			{
				return this._voucher_reward;
			}
			set
			{
				if ((this._voucher_reward != value))
				{
					this.Onvoucher_rewardChanging(value);
					this.SendPropertyChanging();
					this._voucher_reward = value;
					this.SendPropertyChanged("voucher_reward");
					this.Onvoucher_rewardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="voucher_user_voucher", Storage="_user_vouchers", ThisKey="voucher_id", OtherKey="voucher_id")]
		public EntitySet<user_voucher> user_vouchers
		{
			get
			{
				return this._user_vouchers;
			}
			set
			{
				this._user_vouchers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_user_vouchers(user_voucher entity)
		{
			this.SendPropertyChanging();
			entity.voucher = this;
		}
		
		private void detach_user_vouchers(user_voucher entity)
		{
			this.SendPropertyChanging();
			entity.voucher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.quest_status")]
	public partial class quest_status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _status_id;
		
		private string _status_name;
		
		private EntitySet<user_quest> _user_quests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstatus_idChanging(int value);
    partial void Onstatus_idChanged();
    partial void Onstatus_nameChanging(string value);
    partial void Onstatus_nameChanged();
    #endregion
		
		public quest_status()
		{
			this._user_quests = new EntitySet<user_quest>(new Action<user_quest>(this.attach_user_quests), new Action<user_quest>(this.detach_user_quests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int status_id
		{
			get
			{
				return this._status_id;
			}
			set
			{
				if ((this._status_id != value))
				{
					this.Onstatus_idChanging(value);
					this.SendPropertyChanging();
					this._status_id = value;
					this.SendPropertyChanged("status_id");
					this.Onstatus_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_name", DbType="VarChar(55) NOT NULL", CanBeNull=false)]
		public string status_name
		{
			get
			{
				return this._status_name;
			}
			set
			{
				if ((this._status_name != value))
				{
					this.Onstatus_nameChanging(value);
					this.SendPropertyChanging();
					this._status_name = value;
					this.SendPropertyChanged("status_name");
					this.Onstatus_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="quest_status_user_quest", Storage="_user_quests", ThisKey="status_id", OtherKey="status_id")]
		public EntitySet<user_quest> user_quests
		{
			get
			{
				return this._user_quests;
			}
			set
			{
				this._user_quests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_user_quests(user_quest entity)
		{
			this.SendPropertyChanging();
			entity.quest_status = this;
		}
		
		private void detach_user_quests(user_quest entity)
		{
			this.SendPropertyChanging();
			entity.quest_status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.transactions")]
	public partial class transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _transaction_id;
		
		private string _receiver_name;
		
		private string _sender_name;
		
		private string _transaction_type;
		
		private string _transaction_name;
		
		private decimal _amount;
		
		private System.DateTime _transaction_date;
		
		private System.Nullable<int> _users_bank_account_id;
		
		private EntityRef<users_bank_account> _users_bank_account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontransaction_idChanging(int value);
    partial void Ontransaction_idChanged();
    partial void Onreceiver_nameChanging(string value);
    partial void Onreceiver_nameChanged();
    partial void Onsender_nameChanging(string value);
    partial void Onsender_nameChanged();
    partial void Ontransaction_typeChanging(string value);
    partial void Ontransaction_typeChanged();
    partial void Ontransaction_nameChanging(string value);
    partial void Ontransaction_nameChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void Ontransaction_dateChanging(System.DateTime value);
    partial void Ontransaction_dateChanged();
    partial void Onusers_bank_account_idChanging(System.Nullable<int> value);
    partial void Onusers_bank_account_idChanged();
    #endregion
		
		public transaction()
		{
			this._users_bank_account = default(EntityRef<users_bank_account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int transaction_id
		{
			get
			{
				return this._transaction_id;
			}
			set
			{
				if ((this._transaction_id != value))
				{
					this.Ontransaction_idChanging(value);
					this.SendPropertyChanging();
					this._transaction_id = value;
					this.SendPropertyChanged("transaction_id");
					this.Ontransaction_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiver_name", DbType="VarChar(255)")]
		public string receiver_name
		{
			get
			{
				return this._receiver_name;
			}
			set
			{
				if ((this._receiver_name != value))
				{
					this.Onreceiver_nameChanging(value);
					this.SendPropertyChanging();
					this._receiver_name = value;
					this.SendPropertyChanged("receiver_name");
					this.Onreceiver_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sender_name", DbType="VarChar(255)")]
		public string sender_name
		{
			get
			{
				return this._sender_name;
			}
			set
			{
				if ((this._sender_name != value))
				{
					this.Onsender_nameChanging(value);
					this.SendPropertyChanging();
					this._sender_name = value;
					this.SendPropertyChanged("sender_name");
					this.Onsender_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_type", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string transaction_type
		{
			get
			{
				return this._transaction_type;
			}
			set
			{
				if ((this._transaction_type != value))
				{
					this.Ontransaction_typeChanging(value);
					this.SendPropertyChanging();
					this._transaction_type = value;
					this.SendPropertyChanged("transaction_type");
					this.Ontransaction_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string transaction_name
		{
			get
			{
				return this._transaction_name;
			}
			set
			{
				if ((this._transaction_name != value))
				{
					this.Ontransaction_nameChanging(value);
					this.SendPropertyChanging();
					this._transaction_name = value;
					this.SendPropertyChanged("transaction_name");
					this.Ontransaction_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(9,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_date", DbType="Date NOT NULL")]
		public System.DateTime transaction_date
		{
			get
			{
				return this._transaction_date;
			}
			set
			{
				if ((this._transaction_date != value))
				{
					this.Ontransaction_dateChanging(value);
					this.SendPropertyChanging();
					this._transaction_date = value;
					this.SendPropertyChanged("transaction_date");
					this.Ontransaction_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_users_bank_account_id", DbType="Int")]
		public System.Nullable<int> users_bank_account_id
		{
			get
			{
				return this._users_bank_account_id;
			}
			set
			{
				if ((this._users_bank_account_id != value))
				{
					if (this._users_bank_account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onusers_bank_account_idChanging(value);
					this.SendPropertyChanging();
					this._users_bank_account_id = value;
					this.SendPropertyChanged("users_bank_account_id");
					this.Onusers_bank_account_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="users_bank_account_transaction", Storage="_users_bank_account", ThisKey="users_bank_account_id", OtherKey="users_bank_account_id", IsForeignKey=true)]
		public users_bank_account users_bank_account
		{
			get
			{
				return this._users_bank_account.Entity;
			}
			set
			{
				users_bank_account previousValue = this._users_bank_account.Entity;
				if (((previousValue != value) 
							|| (this._users_bank_account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._users_bank_account.Entity = null;
						previousValue.transactions.Remove(this);
					}
					this._users_bank_account.Entity = value;
					if ((value != null))
					{
						value.transactions.Add(this);
						this._users_bank_account_id = value.users_bank_account_id;
					}
					else
					{
						this._users_bank_account_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("users_bank_account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_details")]
	public partial class user_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userDetails_id;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _profile_src;
		
		private System.Nullable<int> _user_id;
		
		private System.Nullable<int> _user_points;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserDetails_idChanging(int value);
    partial void OnuserDetails_idChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onprofile_srcChanging(string value);
    partial void Onprofile_srcChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void Onuser_pointsChanging(System.Nullable<int> value);
    partial void Onuser_pointsChanged();
    #endregion
		
		public user_detail()
		{
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userDetails_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int userDetails_id
		{
			get
			{
				return this._userDetails_id;
			}
			set
			{
				if ((this._userDetails_id != value))
				{
					this.OnuserDetails_idChanging(value);
					this.SendPropertyChanging();
					this._userDetails_id = value;
					this.SendPropertyChanged("userDetails_id");
					this.OnuserDetails_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profile_src", DbType="VarChar(64)")]
		public string profile_src
		{
			get
			{
				return this._profile_src;
			}
			set
			{
				if ((this._profile_src != value))
				{
					this.Onprofile_srcChanging(value);
					this.SendPropertyChanging();
					this._profile_src = value;
					this.SendPropertyChanged("profile_src");
					this.Onprofile_srcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_points", DbType="Int")]
		public System.Nullable<int> user_points
		{
			get
			{
				return this._user_points;
			}
			set
			{
				if ((this._user_points != value))
				{
					this.Onuser_pointsChanging(value);
					this.SendPropertyChanging();
					this._user_points = value;
					this.SendPropertyChanged("user_points");
					this.Onuser_pointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_detail", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.user_details.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.user_details.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_quests")]
	public partial class user_quest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_quest_id;
		
		private System.Nullable<int> _user_id;
		
		private System.Nullable<int> _quest_id;
		
		private System.Nullable<System.DateTime> _date_completed;
		
		private System.Nullable<int> _status_id;
		
		private EntityRef<quest> _quest;
		
		private EntityRef<quest_status> _quest_status;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_quest_idChanging(int value);
    partial void Onuser_quest_idChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void Onquest_idChanging(System.Nullable<int> value);
    partial void Onquest_idChanged();
    partial void Ondate_completedChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_completedChanged();
    partial void Onstatus_idChanging(System.Nullable<int> value);
    partial void Onstatus_idChanged();
    #endregion
		
		public user_quest()
		{
			this._quest = default(EntityRef<quest>);
			this._quest_status = default(EntityRef<quest_status>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_quest_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_quest_id
		{
			get
			{
				return this._user_quest_id;
			}
			set
			{
				if ((this._user_quest_id != value))
				{
					this.Onuser_quest_idChanging(value);
					this.SendPropertyChanging();
					this._user_quest_id = value;
					this.SendPropertyChanged("user_quest_id");
					this.Onuser_quest_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quest_id", DbType="Int")]
		public System.Nullable<int> quest_id
		{
			get
			{
				return this._quest_id;
			}
			set
			{
				if ((this._quest_id != value))
				{
					if (this._quest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onquest_idChanging(value);
					this.SendPropertyChanging();
					this._quest_id = value;
					this.SendPropertyChanged("quest_id");
					this.Onquest_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_completed", DbType="Date")]
		public System.Nullable<System.DateTime> date_completed
		{
			get
			{
				return this._date_completed;
			}
			set
			{
				if ((this._date_completed != value))
				{
					this.Ondate_completedChanging(value);
					this.SendPropertyChanging();
					this._date_completed = value;
					this.SendPropertyChanged("date_completed");
					this.Ondate_completedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_id", DbType="Int")]
		public System.Nullable<int> status_id
		{
			get
			{
				return this._status_id;
			}
			set
			{
				if ((this._status_id != value))
				{
					if (this._quest_status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstatus_idChanging(value);
					this.SendPropertyChanging();
					this._status_id = value;
					this.SendPropertyChanged("status_id");
					this.Onstatus_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="quest_user_quest", Storage="_quest", ThisKey="quest_id", OtherKey="quest_id", IsForeignKey=true)]
		public quest quest
		{
			get
			{
				return this._quest.Entity;
			}
			set
			{
				quest previousValue = this._quest.Entity;
				if (((previousValue != value) 
							|| (this._quest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._quest.Entity = null;
						previousValue.user_quests.Remove(this);
					}
					this._quest.Entity = value;
					if ((value != null))
					{
						value.user_quests.Add(this);
						this._quest_id = value.quest_id;
					}
					else
					{
						this._quest_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("quest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="quest_status_user_quest", Storage="_quest_status", ThisKey="status_id", OtherKey="status_id", IsForeignKey=true)]
		public quest_status quest_status
		{
			get
			{
				return this._quest_status.Entity;
			}
			set
			{
				quest_status previousValue = this._quest_status.Entity;
				if (((previousValue != value) 
							|| (this._quest_status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._quest_status.Entity = null;
						previousValue.user_quests.Remove(this);
					}
					this._quest_status.Entity = value;
					if ((value != null))
					{
						value.user_quests.Add(this);
						this._status_id = value.status_id;
					}
					else
					{
						this._status_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("quest_status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_quest", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.user_quests.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.user_quests.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_voucher")]
	public partial class user_voucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_voucher_id;
		
		private System.Nullable<int> _user_id;
		
		private System.Nullable<int> _voucher_id;
		
		private EntityRef<voucher> _voucher;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_voucher_idChanging(int value);
    partial void Onuser_voucher_idChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void Onvoucher_idChanging(System.Nullable<int> value);
    partial void Onvoucher_idChanged();
    #endregion
		
		public user_voucher()
		{
			this._voucher = default(EntityRef<voucher>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_voucher_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_voucher_id
		{
			get
			{
				return this._user_voucher_id;
			}
			set
			{
				if ((this._user_voucher_id != value))
				{
					this.Onuser_voucher_idChanging(value);
					this.SendPropertyChanging();
					this._user_voucher_id = value;
					this.SendPropertyChanged("user_voucher_id");
					this.Onuser_voucher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voucher_id", DbType="Int")]
		public System.Nullable<int> voucher_id
		{
			get
			{
				return this._voucher_id;
			}
			set
			{
				if ((this._voucher_id != value))
				{
					if (this._voucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvoucher_idChanging(value);
					this.SendPropertyChanging();
					this._voucher_id = value;
					this.SendPropertyChanged("voucher_id");
					this.Onvoucher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="voucher_user_voucher", Storage="_voucher", ThisKey="voucher_id", OtherKey="voucher_id", IsForeignKey=true)]
		public voucher voucher
		{
			get
			{
				return this._voucher.Entity;
			}
			set
			{
				voucher previousValue = this._voucher.Entity;
				if (((previousValue != value) 
							|| (this._voucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._voucher.Entity = null;
						previousValue.user_vouchers.Remove(this);
					}
					this._voucher.Entity = value;
					if ((value != null))
					{
						value.user_vouchers.Add(this);
						this._voucher_id = value.voucher_id;
					}
					else
					{
						this._voucher_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("voucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_voucher", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.user_vouchers.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.user_vouchers.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _email;
		
		private string _password_hash;
		
		private string _password_salt;
		
		private EntitySet<user_detail> _user_details;
		
		private EntitySet<user_quest> _user_quests;
		
		private EntitySet<user_voucher> _user_vouchers;
		
		private EntitySet<users_bank_account> _users_bank_accounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onpassword_hashChanging(string value);
    partial void Onpassword_hashChanged();
    partial void Onpassword_saltChanging(string value);
    partial void Onpassword_saltChanged();
    #endregion
		
		public user()
		{
			this._user_details = new EntitySet<user_detail>(new Action<user_detail>(this.attach_user_details), new Action<user_detail>(this.detach_user_details));
			this._user_quests = new EntitySet<user_quest>(new Action<user_quest>(this.attach_user_quests), new Action<user_quest>(this.detach_user_quests));
			this._user_vouchers = new EntitySet<user_voucher>(new Action<user_voucher>(this.attach_user_vouchers), new Action<user_voucher>(this.detach_user_vouchers));
			this._users_bank_accounts = new EntitySet<users_bank_account>(new Action<users_bank_account>(this.attach_users_bank_accounts), new Action<users_bank_account>(this.detach_users_bank_accounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password_hash", DbType="Char(64) NOT NULL", CanBeNull=false)]
		public string password_hash
		{
			get
			{
				return this._password_hash;
			}
			set
			{
				if ((this._password_hash != value))
				{
					this.Onpassword_hashChanging(value);
					this.SendPropertyChanging();
					this._password_hash = value;
					this.SendPropertyChanged("password_hash");
					this.Onpassword_hashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password_salt", DbType="Char(64) NOT NULL", CanBeNull=false)]
		public string password_salt
		{
			get
			{
				return this._password_salt;
			}
			set
			{
				if ((this._password_salt != value))
				{
					this.Onpassword_saltChanging(value);
					this.SendPropertyChanging();
					this._password_salt = value;
					this.SendPropertyChanged("password_salt");
					this.Onpassword_saltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_detail", Storage="_user_details", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<user_detail> user_details
		{
			get
			{
				return this._user_details;
			}
			set
			{
				this._user_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_quest", Storage="_user_quests", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<user_quest> user_quests
		{
			get
			{
				return this._user_quests;
			}
			set
			{
				this._user_quests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_voucher", Storage="_user_vouchers", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<user_voucher> user_vouchers
		{
			get
			{
				return this._user_vouchers;
			}
			set
			{
				this._user_vouchers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_users_bank_account", Storage="_users_bank_accounts", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<users_bank_account> users_bank_accounts
		{
			get
			{
				return this._users_bank_accounts;
			}
			set
			{
				this._users_bank_accounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_user_details(user_detail entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_user_details(user_detail entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_user_quests(user_quest entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_user_quests(user_quest entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_user_vouchers(user_voucher entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_user_vouchers(user_voucher entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_users_bank_accounts(users_bank_account entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_users_bank_accounts(users_bank_account entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users_bank_accounts")]
	public partial class users_bank_account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _users_bank_account_id;
		
		private string _external_id;
		
		private string _account_type;
		
		private System.Nullable<int> _user_id;
		
		private EntitySet<transaction> _transactions;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onusers_bank_account_idChanging(int value);
    partial void Onusers_bank_account_idChanged();
    partial void Onexternal_idChanging(string value);
    partial void Onexternal_idChanged();
    partial void Onaccount_typeChanging(string value);
    partial void Onaccount_typeChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    #endregion
		
		public users_bank_account()
		{
			this._transactions = new EntitySet<transaction>(new Action<transaction>(this.attach_transactions), new Action<transaction>(this.detach_transactions));
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_users_bank_account_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int users_bank_account_id
		{
			get
			{
				return this._users_bank_account_id;
			}
			set
			{
				if ((this._users_bank_account_id != value))
				{
					this.Onusers_bank_account_idChanging(value);
					this.SendPropertyChanging();
					this._users_bank_account_id = value;
					this.SendPropertyChanged("users_bank_account_id");
					this.Onusers_bank_account_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_external_id", DbType="Char(36) NOT NULL", CanBeNull=false)]
		public string external_id
		{
			get
			{
				return this._external_id;
			}
			set
			{
				if ((this._external_id != value))
				{
					this.Onexternal_idChanging(value);
					this.SendPropertyChanging();
					this._external_id = value;
					this.SendPropertyChanged("external_id");
					this.Onexternal_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string account_type
		{
			get
			{
				return this._account_type;
			}
			set
			{
				if ((this._account_type != value))
				{
					this.Onaccount_typeChanging(value);
					this.SendPropertyChanging();
					this._account_type = value;
					this.SendPropertyChanged("account_type");
					this.Onaccount_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="users_bank_account_transaction", Storage="_transactions", ThisKey="users_bank_account_id", OtherKey="users_bank_account_id")]
		public EntitySet<transaction> transactions
		{
			get
			{
				return this._transactions;
			}
			set
			{
				this._transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_users_bank_account", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.users_bank_accounts.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.users_bank_accounts.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_transactions(transaction entity)
		{
			this.SendPropertyChanging();
			entity.users_bank_account = this;
		}
		
		private void detach_transactions(transaction entity)
		{
			this.SendPropertyChanging();
			entity.users_bank_account = null;
		}
	}
}
#pragma warning restore 1591
